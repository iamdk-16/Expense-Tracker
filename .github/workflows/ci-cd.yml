name: Expense Tracker CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  DOCKER_REGISTRY: docker.io
  DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}

jobs:
  test-and-build:
    runs-on: ubuntu-latest
    name: Test and Build Docker Images
    
    strategy:
      matrix:
        service: [backend, frontend]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'

    - name: Install Backend Dependencies
      if: matrix.service == 'backend'
      run: |
        cd backend
        npm ci --only=production || npm install --only=production

    - name: Build Frontend
      if: matrix.service == 'frontend'
      run: |
        cd frontend/expense-tracker
        npm ci || npm install
        npm run build

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to DockerHub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and push Backend
      if: matrix.service == 'backend'
      uses: docker/build-push-action@v5
      with:
        context: ./backend
        push: true
        tags: |
          ${{ secrets.DOCKER_USERNAME }}/expense-tracker-backend:latest
          ${{ secrets.DOCKER_USERNAME }}/expense-tracker-backend:${{ github.sha }}

    - name: Build and push Frontend
      if: matrix.service == 'frontend'
      uses: docker/build-push-action@v5
      with:
        context: ./frontend/expense-tracker
        push: true
        tags: |
          ${{ secrets.DOCKER_USERNAME }}/expense-tracker-frontend:latest
          ${{ secrets.DOCKER_USERNAME }}/expense-tracker-frontend:${{ github.sha }}

  deploy-local:
    needs: test-and-build
    runs-on: self-hosted
    name: Deploy to Local Kubernetes
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Deploy to Kubernetes
      run: |
        echo "üöÄ Deploying to Kubernetes..."
        
        # Apply the Kubernetes manifests
        kubectl apply -f k8s/base/expense-tracker-fixed.yaml || kubectl apply -f k8s/base/expense-tracker.yaml
        
        # Wait for deployments
        kubectl rollout status deployment/expense-tracker-backend -n expense-tracker --timeout=300s || true
        kubectl rollout status deployment/expense-tracker-frontend -n expense-tracker --timeout=300s || true

    - name: Deployment Complete
      run: |
        echo "‚úÖ Deployment completed!"
        kubectl get pods -n expense-tracker
        echo "üåê Frontend: http://localhost:30080"
        echo "üìä Prometheus: http://localhost:30090"
        echo "üìà Grafana: http://localhost:30300"
